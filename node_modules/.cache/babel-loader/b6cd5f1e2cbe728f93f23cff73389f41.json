{"ast":null,"code":"import _regeneratorRuntime from \"/home/vatsal/betting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vatsal/betting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/vatsal/betting/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Loading from './Loading';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport './App.css';\n\nclass App extends Component {\n  componentWillMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadWeb3();\n\n            case 2:\n              _context.next = 4;\n              return _this.loadBlockchainData();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n\n  loadBlockchainData() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, networkId, contract_abi, contract_address, contract, accounts, balance, maxBet;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = window.web3;\n              _context2.next = 3;\n              return web3.eth.net.getId();\n\n            case 3:\n              networkId = _context2.sent;\n\n              if (networkId !== 4) {\n                window.alert('Please switch network to the Rinkeby and refresh the page');\n              }\n\n              contract_abi = [{\n                \"inputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"constructor\"\n              }, {\n                \"anonymous\": false,\n                \"inputs\": [{\n                  \"indexed\": true,\n                  \"internalType\": \"address\",\n                  \"name\": \"sender\",\n                  \"type\": \"address\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"Received\",\n                \"type\": \"event\"\n              }, {\n                \"anonymous\": false,\n                \"inputs\": [{\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"id\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"bet\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"randomSeed\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"address\",\n                  \"name\": \"player\",\n                  \"type\": \"address\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"winAmount\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"randomResult\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"time\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"Result\",\n                \"type\": \"event\"\n              }, {\n                \"anonymous\": false,\n                \"inputs\": [{\n                  \"indexed\": false,\n                  \"internalType\": \"address\",\n                  \"name\": \"admin\",\n                  \"type\": \"address\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"Withdraw\",\n                \"type\": \"event\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"admin\",\n                \"outputs\": [{\n                  \"internalType\": \"address payable\",\n                  \"name\": \"\",\n                  \"type\": \"address\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"bet\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"seed\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"game\",\n                \"outputs\": [{\n                  \"internalType\": \"bool\",\n                  \"name\": \"\",\n                  \"type\": \"bool\"\n                }],\n                \"stateMutability\": \"payable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"gameId\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"games\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"id\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"bet\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"seed\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"player\",\n                  \"type\": \"address\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"lastGameId\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"\",\n                  \"type\": \"bytes32\"\n                }],\n                \"name\": \"nonces\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"randomResult\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"requestId\",\n                  \"type\": \"bytes32\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"randomness\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"rawFulfillRandomness\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"_keyHash\",\n                  \"type\": \"bytes32\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_fee\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_seed\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"requestRandomness\",\n                \"outputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"requestId\",\n                  \"type\": \"bytes32\"\n                }],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"random\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"verdict\",\n                \"outputs\": [],\n                \"stateMutability\": \"payable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"withdrawEther\",\n                \"outputs\": [],\n                \"stateMutability\": \"payable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"withdrawLink\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              }, {\n                \"stateMutability\": \"payable\",\n                \"type\": \"receive\"\n              }];\n              contract_address = '0xCf638b0B6A6F1a483792025d2349E77C33c04E7C'; //rinkeby\n\n              contract = new web3.eth.Contract(contract_abi, contract_address);\n\n              _this2.setState({\n                contract: contract\n              });\n\n              _context2.next = 11;\n              return web3.eth.getAccounts();\n\n            case 11:\n              accounts = _context2.sent;\n\n              _this2.setState({\n                account: accounts[0]\n              });\n\n              _context2.next = 15;\n              return web3.eth.getBalance(_this2.state.account);\n\n            case 15:\n              balance = _context2.sent;\n\n              _this2.setState({\n                balance: balance\n              });\n\n              _context2.next = 19;\n              return web3.eth.getBalance(contract_address);\n\n            case 19:\n              maxBet = _context2.sent;\n\n              _this2.setState({\n                maxBet: maxBet\n              });\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n\n  loadWeb3() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context3.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context3.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context3.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n\n  makeBet(bet, amount) {\n    //randomSeed will be component of which final random value will be generated\n    var randomSeed = Math.floor(Math.random() * Math.floor(1e9));\n    this.state.contract.methods.game(bet, randomSeed).send({\n      from: this.state.account,\n      value: amount\n    }).on('transactionHash', hash => {\n      this.setState({\n        loading: true\n      });\n      this.state.contract.events.Result({}, (error, event) => {\n        var verdict = event.returnValues.winAmount;\n\n        if (verdict === '0') {\n          window.alert('lose :(');\n        } else {\n          window.alert('WIN!');\n        }\n\n        this.setState({\n          loading: false\n        });\n        window.location.reload();\n      });\n    }).on('error', error => {\n      window.alert('Error');\n    });\n  }\n\n  onChange(value) {\n    this.setState({\n      'amount': value\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: null,\n      amount: null,\n      balance: null,\n      contract: null,\n      event: null,\n      loading: false,\n      maxBet: 0\n    };\n    this.makeBet = this.makeBet.bind(this);\n    this.setState = this.setState.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      account: this.state.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), \"\\xA0\", this.state.loading ? /*#__PURE__*/React.createElement(Loading, {\n      balance: this.state.balance,\n      maxBet: this.state.maxBet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Main, {\n      amount: this.state.amount,\n      balance: this.state.balance,\n      makeBet: this.makeBet,\n      onChange: this.onChange,\n      maxBet: this.state.maxBet,\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vatsal/betting/src/components/App.js"],"names":["React","Component","Loading","Navbar","Main","Web3","App","componentWillMount","loadWeb3","loadBlockchainData","web3","window","eth","net","getId","networkId","alert","contract_abi","contract_address","contract","Contract","setState","getAccounts","accounts","account","getBalance","state","balance","maxBet","ethereum","enable","currentProvider","makeBet","bet","amount","randomSeed","Math","floor","random","methods","game","send","from","value","on","hash","loading","events","Result","error","event","verdict","returnValues","winAmount","location","reload","onChange","constructor","props","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loading from './Loading'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport Web3 from 'web3'\nimport './App.css';\n\nclass App extends Component {\n  \n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const networkId = await web3.eth.net.getId()\n\n    if(networkId!==4){\n      window.alert('Please switch network to the Rinkeby and refresh the page')\n    }\n  \n    const contract_abi = [{\"inputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"constructor\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"address\",\"name\": \"sender\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"Received\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"id\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"randomSeed\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"address\",\"name\": \"player\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"winAmount\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"randomResult\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"time\",\"type\": \"uint256\"}],\"name\": \"Result\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": false,\"internalType\": \"address\",\"name\": \"admin\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"Withdraw\",\"type\": \"event\"},{\"inputs\": [],\"name\": \"admin\",\"outputs\": [{\"internalType\": \"address payable\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"seed\",\"type\": \"uint256\"}],\"name\": \"game\",\"outputs\": [{\"internalType\": \"bool\",\"name\": \"\",\"type\": \"bool\"}],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"gameId\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"name\": \"games\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"id\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"seed\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"},{\"internalType\": \"address payable\",\"name\": \"player\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"lastGameId\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"\",\"type\": \"bytes32\"}],\"name\": \"nonces\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"randomResult\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"requestId\",\"type\": \"bytes32\"},{\"internalType\": \"uint256\",\"name\": \"randomness\",\"type\": \"uint256\"}],\"name\": \"rawFulfillRandomness\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"_keyHash\",\"type\": \"bytes32\"},{\"internalType\": \"uint256\",\"name\": \"_fee\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"_seed\",\"type\": \"uint256\"}],\"name\": \"requestRandomness\",\"outputs\": [{\"internalType\": \"bytes32\",\"name\": \"requestId\",\"type\": \"bytes32\"}],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"random\",\"type\": \"uint256\"}],\"name\": \"verdict\",\"outputs\": [],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"withdrawEther\",\"outputs\": [],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"withdrawLink\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"stateMutability\": \"payable\",\"type\": \"receive\"}]\n    const contract_address = '0xCf638b0B6A6F1a483792025d2349E77C33c04E7C' //rinkeby\n    \n    const contract = new web3.eth.Contract(contract_abi, contract_address);\n    this.setState({ contract: contract })\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const balance = await web3.eth.getBalance(this.state.account)\n    this.setState({ balance: balance })\n\n    const maxBet = await web3.eth.getBalance(contract_address)\n    this.setState({ maxBet: maxBet })\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  makeBet(bet, amount) {\n    //randomSeed will be component of which final random value will be generated\n    var randomSeed = Math.floor(Math.random() * Math.floor(1e9))\n    this.state.contract.methods.game(bet, randomSeed).send({from: this.state.account, value: amount}).on('transactionHash', (hash) => {\n      this.setState({ loading: true })\n      this.state.contract.events.Result({}, (error, event) => {\n        const verdict = event.returnValues.winAmount\n        if(verdict === '0') {\n          window.alert('lose :(')\n        } else {\n          window.alert('WIN!')\n        }\n        this.setState({ loading: false })\n        window.location.reload();\n      })\n    }).on('error', (error) => {\n      window.alert('Error')\n    })\n  }\n\n  onChange(value) {\n    this.setState({'amount': value});\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: null,\n      amount: null,\n      balance: null,\n      contract: null,\n      event: null,\n      loading: false,\n      maxBet: 0\n    }\n\n    this.makeBet = this.makeBet.bind(this)\n    this.setState = this.setState.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account}/>&nbsp;\n        { this.state.loading \n          ? <Loading\n              balance={this.state.balance}\n              maxBet={this.state.maxBet}\n            />\n          : <Main\n              amount={this.state.amount}\n              balance={this.state.balance}\n              makeBet={this.makeBet}\n              onChange={this.onChange}\n              maxBet={this.state.maxBet}\n              loading={this.state.loading}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}